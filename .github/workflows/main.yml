name: Build service

on: 
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
    inputs:
      checkout_source:
          description: "Checkout source (branch/commit)"
          required: true
          default: "cpp_wasm_target"
          type: string
      build_debug:
            description: "Build debug"
            required: true
            default: false
            type: boolean
      build_release:
          description: "Build release"
          required: true
          default: true
          type: boolean
      publish_npm_package:
          description: "Publish NPM package"
          required: true
          default: true
          type: boolean

jobs:
  build:
    name: Build service
    permissions: write-all
    runs-on: ubuntu-latest
    env:
      BASE_ENV: ghcr.io/${{ github.repository_owner }}/map-app-search-service-rel-env
      IMAGE_REPOSITORY: map-app-search-service

    steps:
      - name: "Set configuration environment variables"
        env:
          DEPLOY: ${{ (vars.DEPLOY_ON_K8S == 'true' && github.ref_name == 'main' ) }}
        run: |
          if [[ $GITHUB_EVENT_NAME == 'workflow_dispatch' ]]; then
            #TODO: allow only owner
            export CONFIG_CHECKOUT_SOURCE=${{ inputs.checkout_source }}
            export CONFIG_BUILD_DEBUG=${{ inputs.build_debug }}
            export CONFIG_BUILD_RELEASE=${{ inputs.build_release }}
            export CONFIG_PUBLISH_NPM_PACKAGE=${{ inputs.publish_npm_package }}
          else
            export CONFIG_CHECKOUT_SOURCE=$GITHUB_SHA
            export CONFIG_BUILD_DEBUG=true
            export CONFIG_BUILD_RELEASE=true
            export CONFIG_PUBLISH_NPM_PACKAGE=true
          fi

          echo "CONFIG_CHECKOUT_SOURCE=$CONFIG_CHECKOUT_SOURCE" >> $GITHUB_ENV
          echo "CONFIG_BUILD_DEBUG=$CONFIG_BUILD_DEBUG" >> $GITHUB_ENV
          echo "CONFIG_BUILD_RELEASE=$CONFIG_BUILD_RELEASE" >> $GITHUB_ENV
          echo "CONFIG_PUBLISH_NPM_PACKAGE=$CONFIG_PUBLISH_NPM_PACKAGE" >> $GITHUB_ENV

          echo "Using configuration:"
          cat $GITHUB_ENV

      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.BASE_ENV_TOKEN }}
          ref: ${{ env.CONFIG_CHECKOUT_SOURCE }}

      - name: Build Debug
        if: ${{ env.CONFIG_BUILD_DEBUG == 'true' }}
        run: |
          docker build --target build_debug .

      - name: Build Release
        if: ${{ env.CONFIG_BUILD_RELEASE == 'true' }}
        run: |
          docker build --target build_release .
          docker build --target get_release_build . -o output/buildRel

      - name: Publish Release
        if: ${{ env.CONFIG_BUILD_RELEASE == 'true' }}
        uses: actions/upload-artifact@v3
        with:
          name: map-app-search-service-rel
          path: output/buildRel

      - name: Setup Node
        if: ${{ env.CONFIG_PUBLISH_NPM_PACKAGE == 'true' }}
        uses: actions/setup-node@v4
        with:
          node-version: '21.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@danimihalca'

      - name: Publish NPM package
        if: ${{ env.CONFIG_PUBLISH_NPM_PACKAGE == 'true' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd output/buildRel/bin
          npm publish
